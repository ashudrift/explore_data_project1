installed.packages("XLConnect")
installed.packages("GGplot")
installed.packages("GGplot2")
installed.package("GGplot2")
install.packages("XLConnect")
install.packages("XLConnect")
install.packages("xlsx_0.5.5.tar.gz	")
x=matrix(1:9,3,3)
x
rowSums(x)
c=rowSums(x)
c[1]
max(c)
install.packages(GA)
install.packages("GA")
install.packages("GA")
library(GA)
installed.packages("RFreak")
?GA
machine-job = matrix(1:9,3,3,dimnames = list(c(m1,m2,m3),c(j1,j2,j3)))
machine-job = matrix(1:9,3,3,dimnames = list(c("m1","m2","m3"),c("j1","j2","j3"))
)
machine_job = matrix(1:9,3,3,dimnames = list(c("m1","m2","m3"),c("j1","j2","j3"))
)
machine_job
dim(machine_job)
dim(machine_job)[1]
library(combinat)
permn(1,2,3)
permn(1:3)
a=permn(1:3)
length(a)
View(permn)
?(GA)
library(GA)
?GA
?rnorm
## Creates a random population set
CreatePopulation <- function(Jobs,Population)
{
##  matrix to filled by parents
parents = matrix(nrow=Jobs,ncol=Population,byrow=TRUE)
parent_chrom = c()
##  loop for number of parents required
for(k in 1:Population)
{
Jobs = nrow(data)
chrom = c()
## simulation by generating random   sequence of normal distribution
sim = rnorm(Jobs,1,1)
sort_sim = sort(sim)
## to create a list of jobs as sorted
for(j in 1:Jobs)
{
logic = sim == sort_sim[j]
for(i in 1:Jobs)
{
if( logic[i]==TRUE)
{chrom=c(chrom,i)}
}
}
## Saves a individual parent
parent_chrom = c(parent_chrom,chrom)
}
## creates a matrix of parents
parents = matrix(parent_chrom,nrow=Jobs,ncol=Population,byrow=TRUE)
parents
}
CreatePopulation(5,5)
library(GA)
?GA
library("GA", lib.loc="~/R/win-library/3.1")
library("combinat")
View(combn)
View(combn)
?GA
library(tabuSearch)
?tabuSearch
library(GA)
?GA
library(seirl)
library(swirl)
swirl()
library(ggplot2)
?"ggplot2-package"
?"ggplot"
??xlxs
??xlsx
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
?stl
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(student,count,-grade)
gather(students,count,-grade)
gather(students,count,-grade)
gather(students,count,grade)
library(swirl)
library(swirl)
swirl()
library(dplyr)
tbl=tbl_df(mydf)
cran <- tbl_df(mydf)
View(students2)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize_(by_package,mean)
summarize_(by_package,mean(size))
summarize_(by_package,mean(size))
summarize_(by_package,mean(by_package$size))
summarize(by_package,mean(size))
submit()
pack_sum
cran
by_package <- group_by(cran,c(package,r_arch))
by_package <- group_by(cran,package,r_arch)
by_package
?group_by
by_package <- group_by(cran,package,r_arch,r_os)
by_package
summarize(by_package,mean(size))
by_package <- group_by(cran,package+r_arch,r_os)
by_package <- group_by(cran,c(package,r_arch,r_os))
by_package <- group_by(cran,r_arch,r_os))
by_package <- group_by(cran,r_arch,r_os)
by_package
bypackage <- group_by(cran,r_arch,r_os)
bypackage
summarize(bypackage,mean(size))
?print
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print()
library(swirl)
swirl()
library(dplyr)
tbl <- tbl_df(mydf)
submit()
submit()
submit()
swirl()
cran  <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(bypackage,mean(size))
summarize(by_package,mean(size))
submit()
submit()
submit()
?submit
ls()
library(swirl)
ls()
swirl()
ls()
ls()
ls()
ls()
submit()
submit()
ls()
ls()
submit()
library(XLConnect)
s=read.table("https://s3.amazonaws.com/coursera-uploads/user-1111143b6581b2b632d44753/975119/asst-3/b747ef70a97911e5ad58c521c70d1cfc.txt")
s=read.table("https://s3.amazonaws.com/coursera-uploads/user-1111143b6581b2b632d44753/975119/asst-3/b747ef70a97911e5ad58c521c70d1cfc.txt",setInternet2(TRUE))
s=read.table("http://s3.amazonaws.com/coursera-uploads/user-1111143b6581b2b632d44753/975119/asst-3/b747ef70a97911e5ad58c521c70d1cfc.txt",setInternet2(TRUE))
library(dplyr)
View(s)
dim(s)
s=read.table(""http://s3.amazonaws.com/coursera-uploads/user-1111143b6581b2b632d44753/975119/asst-3/b747ef70a97911e5ad58c521c70d1cfc.txt"",setInternet2(TRUE))
s=read.table(""http://s3.amazonaws.com/coursera-uploads/user-1111143b6581b2b632d44753/975119/asst-3/b747ef70a97911e5ad58c521c70d1cfc.txt",setInternet2(TRUE))
s=read.table("http://s3.amazonaws.com/coursera-uploads/user-1111143b6581b2b632d44753/975119/asst-3/b747ef70a97911e5ad58c521c70d1cfc.txt",setInternet2(TRUE))
View(s)
dim(s)
library(swirl)
swirl()
swirl()
?par
library(datasets)
with(airquality,plt(Wind,Ozone))
with(airquality,plot(Wind,Ozone))
title(main = "kkkk")
with(subset(airquality,Month==5),points(Wind,Ozone,col="red"))
with(subset(airquality,Month==9),points(Wind,Ozone,col="red"))
with(subset(airquality,Month==9),points(Wind,Ozone,col="blue"))
legend("topright",pch=2,col=c("blue","red",legend=c("n","h"))
)
legend("topright",pch=2,col=c("blue","red",legend=c("n","h")))
legend("topright",pch=1,col=c("blue","red",legend=c("n","h")))
legend("topright",pch=1,col=c("blue","red","black")legend=c("n","h","j")))
legend("topright",pch=1,col=c("blue","red","black")legend=c("n","h","j"))
legend("topright",pch=1,col=c("blue","red","black"),legend=c("n","h","j"))
legend("topright",pch=2,col=c("blue","red","black"),legend=c("n","h","j"))
legend("topright",pch=7,col=c("blue","red","black"),legend=c("n","h","j"))
model=lm(Ozone~Wind,airquality)
abline(model)
abline(model,lwd=9)
abline(model,lwd=7)
abline(model,lwd=1)
abline(model,lwd=2)
)
par(mfrow=c(1,2))
with(airquality,{plot(Wind,Ozone)plot(Solar.R,Ozone)})
with(airquality,{plot(Wind,Ozone)plot(Solar.R,Ozone)})
with(airquality,{plot(Wind,Ozone)
plot(Solar.R,Ozone)})
par(mfrow=c(2,1))
with(airquality,{plot(Wind,Ozone)
plot(Solar.R,Ozone)})
mtext("bigshow",outer = TRUE)
par(mfrow=c(1,2))
with(airquality,{plot(Wind,Ozone)
plot(Solar.R,Ozone)})
mtext("bigshow",outer = TRUE)
with(airquality,{plot(Wind,Ozone)
plot(Solar.R,Ozone)})
with(airquality,{plot(Wind,Ozone)
plot(Solar.R,Ozone)
mtext("bigshow",outer = TRUE)})
with(airquality,{
plot(Wind,Ozone)
plot(Solar.R,Ozone)
mtext("bigshow",outer = TRUE)
})
with(airquality,{
plot(Wind,Ozone)
plot(Solar.R,Ozone)
mtext("bow",outer = TRUE)
})
par(mfrow=c(2,1))
with(airquality,{
plot(Wind,Ozone)
plot(Solar.R,Ozone)
mtext("bow",outer = TRUE)
})
with(airquality,{
plot(Wind,Ozone,bg="green")
plot(Solar.R,Ozone)
mtext("bow",outer = TRUE)
})
?plot
example("pch")
pdf()
dev.off()
dev.cur()
pdf()
dev.cur()
dev.off()
png()
dev.cur()
dev.off()
windows()
dev.off()
ls()
setwd("C:/Users/my lapy/Desktop/Data Science/coursera data scientist specilization/Git Repository/ExData_Plotting1")
ata_full <- read.csv("./Data/household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_full)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
data_full <- read.csv("./Data/household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_full)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
data_full <- read.csv("household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_full)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
view(datetime)
head(datetime)
rm()
ls()
rm(data)
rmm(datetime)
rm(datetime)
table=read.table("household_power_consumption.txt",sep = ";",stringsAsFactors = FALSE,header = TRUE)
table$Date = as.Date(table$Date,"%d/%m/%Y")
table_subset = subset(table,Date == "2007-02-01" | Date == "2007-02-02")
table_subset$Time=strptime(table_subset$Time,format = "%H:%M:%S")
table_subset$Time=format(as.POSIXct(table$Time),"%H:%M:%S")
str(table_subset)
table_subset$Global_active_power=as.numeric(table_subset$Global_active_power)
plot(table_subset$Global_active_power~table_subset$time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
table_subset$Time=as.POSIXct(table_subset$Time)
plot(table_subset$Global_active_power~table_subset$time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
str(table_subset)
datetime <- paste(as.Date(table_subset$Date), table_subset$Time)
table_subset$Datetime <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
table_subset$Time=strptime(table_subset$Time,format = "%H:%M:%S")
datetime <- paste(as.Date(table_subset$Date), table_subset$Time)
table_subset$Datetime <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
str(table_subset)
table=read.table("household_power_consumption.txt",sep = ";",stringsAsFactors = FALSE,header = TRUE)
table$Date = as.Date(table$Date,"%d/%m/%Y")
table_subset = subset(table,Date == "2007-02-01" | Date == "2007-02-02")
str(table_subset)
table_subset$Time=strptime(table_subset$Time,format = "%H:%M:%S")
table_subset$Time=format(as.POSIXct(table_subset$Time),"%H:%M:%S")
table_subset$WeekDay=weekdays(table_subset$Date)
datetime <- paste(as.Date(table_subset$Date), table_subset$Time)
table_subset$Datetime <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
str(table_subset)
table_subset$Time=strptime(table_subset$Time,format = "%H:%M:%S")
str(table_subset)
table_subset$Time=as.POSIXct(table_subset$Time)
str(table_subset)
plot(table_subset$Global_active_power~table_subset$Time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(table_subset$Global_active_power~table_subset$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
table_subset$Date_time <- as.POSIXct(date_time)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
table_subset$Date_time <- as.POSIXct(date_time)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
table_subset$Date_time <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
png()
table_subset$Date_time <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
png("plot2")
table_subset$Date_time <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
dev.off()
png("plot2.png")
table_subset$Date_time <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
table_subset$Date_time <- as.POSIXct(datetime)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(table_subset$Global_active_power~table_subset$Date_
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
+      ylab="Global Active Power (kilowatts)", xlab="")
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
window()
dev.cur()
dev.control(2)
dev.control("2")
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
png("plot2.png")
dev.cur()
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
dev.off(4)
dev.off()
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
png("plot2.png")
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
?hist
?plot
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="h",
ylab="Global Active Power (kilowatts)", xlab="")
with(table_subset,points(Sub_metering_1~Date_time, type="h",lwd="3")
)
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n",
ylab="Global Active Power (kilowatts)", xlab="")
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n",
, xlab="")
plot(type="n",
)
with(table_subset,points(Sub_metering_1~Date_time, type="h",lwd="1")
)
with(table_subset,points(Sub_metering_1~Date_time, type="h",lwd="0.2")
)
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n",
, xlab="")
with(table_subset,points(Sub_metering_1~Date_time, type="h",lwd="0.2"))
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n",
, xlab="")
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="l",
, xlab="")
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n",
, xlab="",ylab="Energy sub meeting")
with(table_subset,points(Sub_metering_1~Date_time, type="l"))
with(table_subset,points(Sub_metering_2~Date_time, type="l",col="red"))
with(table_subset,points(Sub_metering_3~Date_time, type="l",col="blue"))
?pch
legend("topright",col=c("black","red","blue"),legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",col=c("black","red","blue"),lty=1, lwd=2,legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
png("plot3.png")
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n", xlab="",ylab="Energy sub meeting")
with(table_subset,points(Sub_metering_1~Date_time, type="l"))
with(table_subset,points(Sub_metering_2~Date_time, type="l",col="red"))
with(table_subset,points(Sub_metering_3~Date_time, type="l",col="blue"))
legend("topright",col=c("black","red","blue"),lty=1, lwd=2,legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
dev.off()
mfrow=c(2,2)
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
mfrow=c(2,2)
with(table_subset{
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(table_subset$Voltage~table_subset$Date_time, type="l",
ylab="Voltage", xlab="datetime")
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n", xlab="",ylab="Energy sub meeting")
with(table_subset,points(Sub_metering_1~Date_time, type="l"))
with(table_subset,points(Sub_metering_2~Date_time, type="l",col="red"))
with(table_subset,points(Sub_metering_3~Date_time, type="l",col="blue"))
legend("topright",col=c("black","red","blue"),lty=1, lwd=2,legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(table_subset$Global_reactive_power~table_subset$Date_time, type="l",
ylab="Global_Reactive_Power (kilowatts)", xlab="datetime")
})
dev.off()
par(mfrow=c(2,2))
with(table_subset{
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(table_subset$Voltage~table_subset$Date_time, type="l",
ylab="Voltage", xlab="datetime")
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n", xlab="",ylab="Energy sub meeting")
with(table_subset,points(Sub_metering_1~Date_time, type="l"))
with(table_subset,points(Sub_metering_2~Date_time, type="l",col="red"))
with(table_subset,points(Sub_metering_3~Date_time, type="l",col="blue"))
legend("topright",col=c("black","red","blue"),lty=1, lwd=2,legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(table_subset$Global_reactive_power~table_subset$Date_time, type="l",
ylab="Global_Reactive_Power (kilowatts)", xlab="datetime")
})
png("plot4.png")
par(mfrow=c(2,2))
with(table_subset{
plot(table_subset$Global_active_power~table_subset$Date_time, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(table_subset$Voltage~table_subset$Date_time, type="l",
ylab="Voltage", xlab="datetime")
plot(table_subset$Sub_metering_1~table_subset$Date_time, type="n", xlab="",ylab="Energy sub meeting")
with(table_subset,points(Sub_metering_1~Date_time, type="l"))
with(table_subset,points(Sub_metering_2~Date_time, type="l",col="red"))
with(table_subset,points(Sub_metering_3~Date_time, type="l",col="blue"))
legend("topright",col=c("black","red","blue"),lty=1, lwd=2,legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(table_subset$Global_reactive_power~table_subset$Date_time, type="l",
ylab="Global_Reactive_Power", xlab="datetime")
})
dev.off()
png("plot1.png")
hist(table_subset$Global_active_power,col="red",xlab = "Global Active Power(kilowatts)",main = c("Global Active Power"))
dev.off()
table$Date = as.Date(table$Date,"%d/%m/%Y")
table_subset = subset(table,Date == "2007-02-01" | Date == "2007-02-02")
table_subset$Time=strptime(table_subset$Time,format = "%H:%M:%S")
table_subset$Time=format(as.POSIXct(table_subset$Time),"%H:%M:%S")
str(table_subset)
table_subset$Global_active_power=as.numeric(table_subset$Global_active_power)
hist(table_subset$Global_active_power,col="red",xlab = "Global Active Power(kilowatts)",main = c("Global Active Power"))
png("plot1.png")
hist(table_subset$Global_active_power,col="red",xlab = "Global Active Power(kilowatts)",main = c("Global Active Power"))
dev.off()
